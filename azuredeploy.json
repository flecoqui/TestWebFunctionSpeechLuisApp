{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "minLength": 2,
      "maxLength": 50,
      "metadata": {
        "description": "Service name prefix must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and is limited between 2 and 50 characters in length."
      }
    },
    "webAppSku": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "Y1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "The SKU of the Web service you want to create."
      }
    },
    "azFunctionAppSku": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "Y1"
      ],
      "metadata": {
        "description": "The SKU of the Azure Function you want to create."
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/flecoqui/TestWebFunctionSpeechLuis.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "azFunctionPlanName": "[concat(parameters('namePrefix'), 'functplan')]",
    "azFunctionName": "[concat(parameters('namePrefix'), 'function')]",
    "appServicePlanName": "[concat(parameters('namePrefix'), 'webplan')]",
    "webAppName": "[concat(parameters('namePrefix'), 'web')]",
    "replicaCount": "1",
    "partitionCount": "1",
    "hostingMode": "default"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "[toLower(parameters('azFunctionAppSku'))]",
        "capacity": 1
      },
      "kind": "app",
      "name": "[variables('azFunctionPlanName')]",
      "apiVersion": "2016-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('azFunctionPlanName')]",
        "numberOfWorkers": 0
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[variables('azFunctionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('azFunctionPlanName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('azFunctionName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('azFunctionName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('azFunctionPlanName'))]",
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false
      },
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('azFunctionName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]

    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "[toLower(parameters('webAppSku'))]",
        "capacity": 1
      },
      "kind": "app",
      "name": "[variables('appServicePlanName')]",
      "apiVersion": "2016-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('appServicePlanName')]",
        "numberOfWorkers": 0
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "WebApp",
      "name": "[variables('webAppName')]",
      "apiVersion": "2016-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('webAppName')]",
        "hostNames": [
          "[concat(variables('webAppName'),'.azurewebsites.net')]"
        ],
        "enabledHostNames": [
          "[concat(variables('webAppName'),'.azurewebsites.net')]",
          "[concat(variables('webAppName'),'.scm.azurewebsites.net')]"
        ],
        "hostNameSslStates": [
          {
            "name": "[concat(variables('webAppName'),'.azurewebsites.net')]",
            "sslState": 0,
            "thumbprint": null,
            "ipBasedSslState": 0
          },
          {
            "name": "[concat(variables('webAppName'),'.scm.azurewebsites.net')]",
            "sslState": 0,
            "thumbprint": null,
            "ipBasedSslState": 0
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ]
    },

    {
      "apiVersion": "2015-04-01",
      "name": "[concat('ServerErrors ', variables('webAppName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('webAppName')]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webAppName')))]": "Resource",
        "displayName": "ServerErrorsAlertRule"
      },
      "properties": {
        "name": "[concat('ServerErrors ', variables('webAppName'))]",
        "description": "[concat(variables('webAppName'), ' has some server errors, status code 5xx.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
            "metricName": "Http5xx"
          },
          "operator": "GreaterThan",
          "threshold": 0.0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "apiVersion": "2015-04-01",
      "name": "[concat('ForbiddenRequests ', variables('webAppName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('webAppName')]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webAppName')))]": "Resource",
        "displayName": "ForbiddenRequestsAlertRule"
      },
      "properties": {
        "name": "[concat('ForbiddenRequests ', variables('webAppName'))]",
        "description": "[concat(variables('webAppName'), ' has some requests that are forbidden, status code 403.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
            "metricName": "Http403"
          },
          "operator": "GreaterThan",
          "threshold": 0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },

    {
      "apiVersion": "2015-05-01",
      "name": "[concat('AppInsights', variables('webAppName'))]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('webAppName')]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webAppName')))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "ApplicationId": "[variables('webAppName')]"
      }
    }
  ],
  "outputs": {
    "curlCmdAzWeb1": {
      "type": "string",
      "value": "[concat('curl -d \"{}\" -H \"Content-Type: application/json\"  -X POST   https://',variables('webAppName'),'.azurewebsites.net/api/value')]"
    },
    "curlCmdAzWeb2": {
      "type": "string",
      "value": "[concat('curl -H \"Content-Type: application/json\"  -X GET   https://',variables('webAppName'),'.azurewebsites.net/api/test')]"
    },
    "curlCmdAzFunction1": {
      "type": "string",
      "value": "[concat('curl -d \"{}\" -H \"Content-Type: application/json\"  -X POST   https://',variables('azFunctionName'),'.azurewebsites.net/api/value')]"
    },
    "curlCmdAzFunction2": {
      "type": "string",
      "value": "[concat('curl -H \"Content-Type: application/json\"  -X GET   https://',variables('azFunctionName'),'.azurewebsites.net/api/test')]"
    }
  }
}